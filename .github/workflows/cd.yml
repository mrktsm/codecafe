name: CD Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy-backend-to-ec2:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push backend image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: codecafe-backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest ./backend
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Deploy to EC2
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST_DNS: ${{ secrets.EC2_HOST_DNS }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: codecafe-backend
          IMAGE_TAG: ${{ github.sha }}
          SPRING_REDIS_HOST: master.codecafe-redis-node.sra8pa.use2.cache.amazonaws.com
          SPRING_REDIS_PORT: 6379
          SPRING_REDIS_SSL_ENABLED: true
        run: |
          echo "Starting deployment to EC2 instance: $EC2_HOST_DNS"

          mkdir -p ~/.ssh/
          echo "$EC2_SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$EC2_HOST_DNS" >> ~/.ssh/known_hosts

          ssh -i ~/.ssh/id_rsa ec2-user@$EC2_HOST_DNS << EOF
            echo "Logged into EC2 instance: $EC2_HOST_DNS"
            
            echo "Logging into AWS ECR..."
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
            
            echo "Pulling latest image from ECR..."
            docker pull $ECR_REGISTRY/$ECR_REPOSITORY:latest
            
            echo "Stopping and removing existing container if any..."
            docker stop codecafe-backend || true 
            docker rm codecafe-backend || true
            
            echo "Attempting to stop old nohup Java process..."
            ps aux | grep 'java -jar backend-redis-fix-v1.jar' | grep -v grep | awk '{print \$2}' | xargs -r kill -9 || true
            
            echo "Running new Docker container..."
            docker run -d --name codecafe-backend \
              -p 127.0.0.1:8080:8080 \
              -e SPRING_REDIS_HOST=$SPRING_REDIS_HOST \
              -e SPRING_REDIS_PORT=$SPRING_REDIS_PORT \
              -e SPRING_REDIS_SSL_ENABLED=$SPRING_REDIS_SSL_ENABLED \
              $ECR_REGISTRY/$ECR_REPOSITORY:latest
              
            echo "Listing running Docker containers..."
            docker ps
            
            echo "Deployment script finished."
          EOF
