name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  server-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Build and test with Maven
        working-directory: ./server
        run: ./mvnw clean test

  client-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        working-directory: ./client
        run: npm ci

      - name: Lint
        working-directory: ./client
        run: npm run lint

      - name: Test
        working-directory: ./client
        run: npm test

  docker-build:
    needs: [server-test, client-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and test Docker Compose
        run: |
          echo "Docker info:"
          docker info
          echo "Docker version:"
          docker version
          echo "Docker Compose version:"
          docker compose version
          echo "Listing Docker networks:"
          docker network ls

          echo "Building Docker images individually with verbose output:"
          docker compose build redis
          docker compose build server
          docker compose build client

          echo "Starting Redis service:"
          docker compose up -d redis
          sleep 5
          docker compose ps redis
          docker compose logs redis

          echo "Starting Server service:"
          docker compose up -d server
          sleep 10
          docker compose ps server
          docker compose logs server

          echo "Starting Client service:"
          docker compose up -d client
          sleep 5
          docker compose ps client
          docker compose logs client

          echo "All container status:"
          docker compose ps

          echo "Cleaning up:"
          docker compose down
